
package frames;

/*****************************************
* Class Name: PlayerOptions
* Purpose: A JPanel where the user specifies
* the options for a new game
* 
* NOTE: This class is a bit verbose as I did not refactor it from
* what the form generator provided like I did in the other classes
*******************************************/

import monopoly.engine.Player;
import monopoly.engine.Game;
import java.util.ArrayList;
import javafx.scene.control.RadioButton;
import javax.swing.JFrame;

public class PlayerOptions extends javax.swing.JPanel {

  
    public PlayerOptions() {
        initComponents();
        initStartingOptions();
    }

    /***************************************************************************/
    //The following method was generated by the for editor
    /***************************************************************************/
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionsTitle = new javax.swing.JLabel();
        addPlayerBtn = new javax.swing.JButton();
        deletePlayerBtn = new javax.swing.JButton();
        playerOnePanel = new javax.swing.JPanel();
        playerOneName = new javax.swing.JTextField();
        playerOneLabel = new javax.swing.JLabel();
        humanPlayerOne = new javax.swing.JRadioButton();
        hatOne = new javax.swing.JLabel();
        battleshipOne = new javax.swing.JLabel();
        racecarOne = new javax.swing.JLabel();
        barrelOne = new javax.swing.JLabel();
        checkHatOne = new javax.swing.JCheckBox();
        checkBOne = new javax.swing.JCheckBox();
        checkCarOne = new javax.swing.JCheckBox();
        checkBarOne = new javax.swing.JCheckBox();
        shoeOne = new javax.swing.JLabel();
        checkShoeOne = new javax.swing.JCheckBox();
        playerTwoPanel = new javax.swing.JPanel();
        playerTwoLabel = new javax.swing.JLabel();
        playerTwoName = new javax.swing.JTextField();
        humanPlayerTwo = new javax.swing.JRadioButton();
        hatTwo = new javax.swing.JLabel();
        battleshipTwo = new javax.swing.JLabel();
        racecarTwo = new javax.swing.JLabel();
        barrelTwo = new javax.swing.JLabel();
        checkHatTwo = new javax.swing.JCheckBox();
        checkBTwo = new javax.swing.JCheckBox();
        checkCarTwo = new javax.swing.JCheckBox();
        checkBarTwo = new javax.swing.JCheckBox();
        shoeTwo = new javax.swing.JLabel();
        checkShoeTwo = new javax.swing.JCheckBox();
        playerThreePanel = new javax.swing.JPanel();
        playerThreeName = new javax.swing.JTextField();
        playerThreeLabel = new javax.swing.JLabel();
        humanPlayerThree = new javax.swing.JRadioButton();
        hatThree = new javax.swing.JLabel();
        battleshipThree = new javax.swing.JLabel();
        racecarThree = new javax.swing.JLabel();
        barrelThree = new javax.swing.JLabel();
        checkHatThree = new javax.swing.JCheckBox();
        checkBThree = new javax.swing.JCheckBox();
        checkCarThree = new javax.swing.JCheckBox();
        checkBarThree = new javax.swing.JCheckBox();
        shoeThree = new javax.swing.JLabel();
        checkShoeThree = new javax.swing.JCheckBox();
        playerFourPanel = new javax.swing.JPanel();
        playerFourLabel = new javax.swing.JLabel();
        playerFourName = new javax.swing.JTextField();
        humanPlayerFour = new javax.swing.JRadioButton();
        hatFour = new javax.swing.JLabel();
        battleshipFour = new javax.swing.JLabel();
        racecarFour = new javax.swing.JLabel();
        barrelFour = new javax.swing.JLabel();
        checkHatFour = new javax.swing.JCheckBox();
        checkBFour = new javax.swing.JCheckBox();
        checkCarFour = new javax.swing.JCheckBox();
        checkBarFour = new javax.swing.JCheckBox();
        shoeFour = new javax.swing.JLabel();
        checkShoeFour = new javax.swing.JCheckBox();
        startBtn = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 800));

        optionsTitle.setText("Select Player Options");

        addPlayerBtn.setText("Add Player");
        addPlayerBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addPlayerBtnMousePressed(evt);
            }
        });

        deletePlayerBtn.setText("Delete Player");
        deletePlayerBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deletePlayerBtnMousePressed(evt);
            }
        });

        playerOnePanel.setBackground(new java.awt.Color(0, 204, 255));
        playerOnePanel.setBorder(new javax.swing.border.MatteBorder(null));

        playerOneName.setText("Player1");

        playerOneLabel.setText("Player Name:");

        humanPlayerOne.setBackground(new java.awt.Color(0, 204, 255));
        humanPlayerOne.setText("Human Player");
        humanPlayerOne.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                humanPlayerOneMousePressed(evt);
            }
        });

        hatOne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Hat.png"))); // NOI18N

        battleshipOne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Battleship.png"))); // NOI18N

        racecarOne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Racecar.jpg"))); // NOI18N

        barrelOne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/WheelBarrel.png"))); // NOI18N

        checkHatOne.setBackground(new java.awt.Color(0, 204, 255));
        checkHatOne.setText("Hat");
        checkHatOne.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkHatOneMousePressed(evt);
            }
        });

        checkBOne.setBackground(new java.awt.Color(0, 204, 255));
        checkBOne.setText("Battleship");
        checkBOne.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkBOneMousePressed(evt);
            }
        });

        checkCarOne.setBackground(new java.awt.Color(0, 204, 255));
        checkCarOne.setText("Racecar");
        checkCarOne.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkCarOneMousePressed(evt);
            }
        });

        checkBarOne.setBackground(new java.awt.Color(0, 204, 255));
        checkBarOne.setText("Barrel");
        checkBarOne.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkBarOneMousePressed(evt);
            }
        });

        shoeOne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Shoe.png"))); // NOI18N

        checkShoeOne.setBackground(new java.awt.Color(0, 204, 255));
        checkShoeOne.setText("Shoe");
        checkShoeOne.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkShoeOneMousePressed(evt);
            }
        });

        javax.swing.GroupLayout playerOnePanelLayout = new javax.swing.GroupLayout(playerOnePanel);
        playerOnePanel.setLayout(playerOnePanelLayout);
        playerOnePanelLayout.setHorizontalGroup(
            playerOnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerOnePanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(playerOneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(playerOneName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(playerOnePanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(humanPlayerOne))
            .addGroup(playerOnePanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(hatOne)
                .addGap(18, 18, 18)
                .addComponent(checkHatOne)
                .addGap(28, 28, 28)
                .addComponent(battleshipOne)
                .addGap(8, 8, 8)
                .addComponent(checkBOne))
            .addGroup(playerOnePanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(racecarOne)
                .addGap(8, 8, 8)
                .addComponent(checkCarOne)
                .addGap(7, 7, 7)
                .addComponent(barrelOne)
                .addGap(8, 8, 8)
                .addComponent(checkBarOne))
            .addGroup(playerOnePanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(shoeOne)
                .addGap(8, 8, 8)
                .addComponent(checkShoeOne))
        );
        playerOnePanelLayout.setVerticalGroup(
            playerOnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerOnePanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(playerOnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerOnePanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(playerOneLabel))
                    .addComponent(playerOneName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(humanPlayerOne)
                .addGap(33, 33, 33)
                .addGroup(playerOnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hatOne, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(playerOnePanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(checkHatOne))
                    .addComponent(battleshipOne)
                    .addGroup(playerOnePanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(checkBOne)))
                .addGap(18, 18, 18)
                .addGroup(playerOnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(racecarOne)
                    .addGroup(playerOnePanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(checkCarOne))
                    .addGroup(playerOnePanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(barrelOne))
                    .addGroup(playerOnePanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(checkBarOne)))
                .addGap(9, 9, 9)
                .addGroup(playerOnePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shoeOne)
                    .addGroup(playerOnePanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(checkShoeOne))))
        );

        playerTwoPanel.setBackground(new java.awt.Color(255, 51, 51));
        playerTwoPanel.setBorder(new javax.swing.border.MatteBorder(null));

        playerTwoLabel.setText("Player Name:");

        playerTwoName.setText("Player2");

        humanPlayerTwo.setBackground(new java.awt.Color(255, 51, 51));
        humanPlayerTwo.setText("Human Player");
        humanPlayerTwo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                humanPlayerTwoMousePressed(evt);
            }
        });

        hatTwo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Hat.png"))); // NOI18N

        battleshipTwo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Battleship.png"))); // NOI18N

        racecarTwo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Racecar.jpg"))); // NOI18N

        barrelTwo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/WheelBarrel.png"))); // NOI18N

        checkHatTwo.setBackground(new java.awt.Color(255, 51, 51));
        checkHatTwo.setText("Hat");
        checkHatTwo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkHatTwoMousePressed(evt);
            }
        });

        checkBTwo.setBackground(new java.awt.Color(255, 51, 51));
        checkBTwo.setText("Battleship");
        checkBTwo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkBTwoMousePressed(evt);
            }
        });

        checkCarTwo.setBackground(new java.awt.Color(255, 51, 51));
        checkCarTwo.setText("Racecar");
        checkCarTwo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkCarTwoMousePressed(evt);
            }
        });

        checkBarTwo.setBackground(new java.awt.Color(255, 51, 51));
        checkBarTwo.setText("Barrel");
        checkBarTwo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkBarTwoMousePressed(evt);
            }
        });

        shoeTwo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Shoe.png"))); // NOI18N

        checkShoeTwo.setBackground(new java.awt.Color(255, 51, 51));
        checkShoeTwo.setText("Shoe");
        checkShoeTwo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkShoeTwoMousePressed(evt);
            }
        });

        javax.swing.GroupLayout playerTwoPanelLayout = new javax.swing.GroupLayout(playerTwoPanel);
        playerTwoPanel.setLayout(playerTwoPanelLayout);
        playerTwoPanelLayout.setHorizontalGroup(
            playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerTwoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerTwoPanelLayout.createSequentialGroup()
                        .addComponent(humanPlayerTwo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(battleshipTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkBTwo)
                        .addGap(35, 35, 35))
                    .addGroup(playerTwoPanelLayout.createSequentialGroup()
                        .addGroup(playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(playerTwoPanelLayout.createSequentialGroup()
                                .addComponent(playerTwoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(playerTwoName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(playerTwoPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(playerTwoPanelLayout.createSequentialGroup()
                                        .addComponent(shoeTwo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkShoeTwo))
                                    .addGroup(playerTwoPanelLayout.createSequentialGroup()
                                        .addGroup(playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(racecarTwo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(hatTwo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(playerTwoPanelLayout.createSequentialGroup()
                                                .addGap(7, 7, 7)
                                                .addComponent(checkCarTwo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(barrelTwo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(checkBarTwo))
                                            .addGroup(playerTwoPanelLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(checkHatTwo)))))))
                        .addGap(45, 45, 45))))
        );
        playerTwoPanelLayout.setVerticalGroup(
            playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerTwoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkBTwo)
                    .addGroup(playerTwoPanelLayout.createSequentialGroup()
                        .addGroup(playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playerTwoName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerTwoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(humanPlayerTwo)
                        .addGap(30, 30, 30)
                        .addGroup(playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hatTwo)
                            .addComponent(checkHatTwo)
                            .addComponent(battleshipTwo))))
                .addGap(36, 36, 36)
                .addGroup(playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkCarTwo)
                    .addComponent(racecarTwo)
                    .addComponent(barrelTwo)
                    .addComponent(checkBarTwo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(playerTwoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shoeTwo)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerTwoPanelLayout.createSequentialGroup()
                        .addComponent(checkShoeTwo)
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );

        playerThreePanel.setBackground(new java.awt.Color(102, 255, 102));
        playerThreePanel.setBorder(new javax.swing.border.MatteBorder(null));

        playerThreeName.setText("Player3");

        playerThreeLabel.setText("Player Name:");

        humanPlayerThree.setBackground(new java.awt.Color(102, 255, 102));
        humanPlayerThree.setText("Human Player");
        humanPlayerThree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                humanPlayerThreeMousePressed(evt);
            }
        });

        hatThree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Hat.png"))); // NOI18N

        battleshipThree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Battleship.png"))); // NOI18N

        racecarThree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Racecar.jpg"))); // NOI18N

        barrelThree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/WheelBarrel.png"))); // NOI18N

        checkHatThree.setBackground(new java.awt.Color(102, 255, 102));
        checkHatThree.setText("Hat");
        checkHatThree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkHatThreeMousePressed(evt);
            }
        });

        checkBThree.setBackground(new java.awt.Color(102, 255, 102));
        checkBThree.setText("Battleship");
        checkBThree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkBThreeMousePressed(evt);
            }
        });

        checkCarThree.setBackground(new java.awt.Color(102, 255, 102));
        checkCarThree.setText("Racecar");
        checkCarThree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkCarThreeMousePressed(evt);
            }
        });

        checkBarThree.setBackground(new java.awt.Color(102, 255, 102));
        checkBarThree.setText("Barrel");
        checkBarThree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkBarThreeMousePressed(evt);
            }
        });

        shoeThree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Shoe.png"))); // NOI18N

        checkShoeThree.setBackground(new java.awt.Color(102, 255, 102));
        checkShoeThree.setText("Shoe");
        checkShoeThree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkShoeThreeMousePressed(evt);
            }
        });

        javax.swing.GroupLayout playerThreePanelLayout = new javax.swing.GroupLayout(playerThreePanel);
        playerThreePanel.setLayout(playerThreePanelLayout);
        playerThreePanelLayout.setHorizontalGroup(
            playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerThreePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerThreePanelLayout.createSequentialGroup()
                        .addComponent(humanPlayerThree)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(battleshipThree, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkBThree))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerThreePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(playerThreePanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(playerThreePanelLayout.createSequentialGroup()
                                        .addComponent(shoeThree)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkShoeThree))
                                    .addGroup(playerThreePanelLayout.createSequentialGroup()
                                        .addGroup(playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(racecarThree)
                                            .addComponent(hatThree))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkHatThree)
                                            .addGroup(playerThreePanelLayout.createSequentialGroup()
                                                .addComponent(checkCarThree)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(barrelThree)
                                                .addGap(18, 18, 18)
                                                .addComponent(checkBarThree))))))
                            .addGroup(playerThreePanelLayout.createSequentialGroup()
                                .addComponent(playerThreeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(playerThreeName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(9, 9, 9))
        );
        playerThreePanelLayout.setVerticalGroup(
            playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerThreePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerThreePanelLayout.createSequentialGroup()
                        .addGroup(playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(playerThreePanelLayout.createSequentialGroup()
                                .addGroup(playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(playerThreeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(playerThreeLabel))
                                .addGap(18, 18, 18)
                                .addComponent(humanPlayerThree)
                                .addGap(28, 28, 28)
                                .addGroup(playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(hatThree)
                                    .addComponent(battleshipThree)
                                    .addComponent(checkBThree)))
                            .addComponent(checkHatThree))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(racecarThree, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(barrelThree, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkBarThree, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(playerThreePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(checkCarThree)))
                .addGap(28, 28, 28)
                .addGroup(playerThreePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(shoeThree)
                    .addComponent(checkShoeThree))
                .addContainerGap())
        );

        playerFourPanel.setBackground(new java.awt.Color(255, 255, 51));
        playerFourPanel.setBorder(new javax.swing.border.MatteBorder(null));

        playerFourLabel.setText("Player Name:");

        playerFourName.setText("Player4");

        humanPlayerFour.setBackground(new java.awt.Color(255, 255, 51));
        humanPlayerFour.setText("Human Player");
        humanPlayerFour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                humanPlayerFourMousePressed(evt);
            }
        });

        hatFour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Hat.png"))); // NOI18N

        battleshipFour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Battleship.png"))); // NOI18N

        racecarFour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Racecar.jpg"))); // NOI18N

        barrelFour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/WheelBarrel.png"))); // NOI18N

        checkHatFour.setBackground(new java.awt.Color(255, 255, 51));
        checkHatFour.setText("Hat");
        checkHatFour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkHatFourMousePressed(evt);
            }
        });

        checkBFour.setBackground(new java.awt.Color(255, 255, 51));
        checkBFour.setText("Battleship");
        checkBFour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkBFourMousePressed(evt);
            }
        });

        checkCarFour.setBackground(new java.awt.Color(255, 255, 51));
        checkCarFour.setText("Racecar");
        checkCarFour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkCarFourMousePressed(evt);
            }
        });

        checkBarFour.setBackground(new java.awt.Color(255, 255, 51));
        checkBarFour.setText("Barrel");
        checkBarFour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkBarFourMousePressed(evt);
            }
        });

        shoeFour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monopoly/resources/Shoe.png"))); // NOI18N

        checkShoeFour.setBackground(new java.awt.Color(255, 255, 51));
        checkShoeFour.setText("Shoe");
        checkShoeFour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkShoeFourMousePressed(evt);
            }
        });

        javax.swing.GroupLayout playerFourPanelLayout = new javax.swing.GroupLayout(playerFourPanel);
        playerFourPanel.setLayout(playerFourPanelLayout);
        playerFourPanelLayout.setHorizontalGroup(
            playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerFourPanelLayout.createSequentialGroup()
                .addGroup(playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerFourPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(playerFourPanelLayout.createSequentialGroup()
                                .addComponent(playerFourLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(playerFourName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(playerFourPanelLayout.createSequentialGroup()
                                .addGroup(playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerFourPanelLayout.createSequentialGroup()
                                        .addComponent(hatFour)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(checkHatFour)
                                        .addGap(21, 21, 21))
                                    .addComponent(humanPlayerFour)
                                    .addGroup(playerFourPanelLayout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(racecarFour)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(checkCarFour)))
                                .addGap(16, 16, 16)
                                .addGroup(playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(barrelFour)
                                    .addComponent(battleshipFour, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkBFour)
                                    .addComponent(checkBarFour)))))
                    .addGroup(playerFourPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(shoeFour)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkShoeFour)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        playerFourPanelLayout.setVerticalGroup(
            playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerFourPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerFourName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerFourLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(humanPlayerFour)
                .addGroup(playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerFourPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hatFour, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkHatFour, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerFourPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(battleshipFour, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(checkBFour, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addGroup(playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkCarFour)
                    .addComponent(racecarFour)
                    .addComponent(barrelFour)
                    .addComponent(checkBarFour))
                .addGap(18, 18, 18)
                .addGroup(playerFourPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(shoeFour)
                    .addComponent(checkShoeFour))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        startBtn.setText("Start!");
        startBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                startBtnMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(playerThreePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(playerOnePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(playerTwoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(playerFourPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(optionsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addPlayerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(deletePlayerBtn)
                                .addGap(61, 61, 61)))
                        .addGap(281, 281, 281)
                        .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(optionsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addPlayerBtn)
                            .addComponent(deletePlayerBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(playerTwoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playerOnePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(playerFourPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(playerThreePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    //set the starting state of the form
    private void initStartingOptions()
    {
        m_newGame = new Game();
        
        humanPlayerOne.setSelected(true);
        humanPlayerTwo.setSelected(true);
        humanPlayerThree.setSelected(true);
        humanPlayerFour.setSelected(true);
        
        checkHatOne.setSelected(true);
        checkBTwo.setSelected(true);
        
        
        playerThreePanel.setVisible(false);
        playerFourPanel.setVisible(false);
        
        m_numPlayers = 2;
    }
    
/*
NAME
        setGame

SYNOPSIS
        setGame()
    
            No parameters

DESCRIPTION
        This method initializes the Game object that will be sent over to the 
        MainGameFrame based on the users provided options. 

RETURNS
        void

AUTHOR
        William Ryan
*/
    private void setGame()
    {
        //create desiered amount of m_players
        m_players = new Player[m_numPlayers];
        
        switch (m_numPlayers)
        {
            //if there are two m_players
            //the following is repeated, just with more m_players
            case 2:
                //trim the name provded and if the user did not enter anything
                if(playerOneName.getText().trim().equals(""))
                {
                    //use default name
                    m_players[0] = new Player("Player1");
                }
                else
                {
                    //otherwise, use the provided name
                    m_players[0] = new Player(playerOneName.getText());
                }
                
                if(playerTwoName.getText().trim().equals(""))
                {
                    m_players[1] = new Player("Player2");
                }
                else
                {
                    m_players[1] = new Player(playerTwoName.getText());
                }
                
                break;
            //if there are three m_players
            case 3:
                if(playerOneName.getText().trim().equals(""))
                {
                    m_players[0] = new Player("Player1");
                }
                else
                {
                    m_players[0] = new Player(playerOneName.getText());
                }
                
                if(playerTwoName.getText().trim().equals(""))
                {
                    m_players[1] = new Player("Player2");
                }
                else
                {
                    m_players[1] = new Player(playerTwoName.getText());
                }
                
                if(playerThreeName.getText().trim().equals(""))
                {
                    m_players[2] = new Player("Player3");
                }
                else
                {
                    m_players[2] = new Player(playerThreeName.getText());
                }
                
                break;
            //if there are four m_players
            case 4:
                if(playerOneName.getText().trim().equals(""))
                {
                    m_players[0] = new Player("Player1");
                }
                else
                {
                    m_players[0] = new Player(playerOneName.getText());
                }
                
                if(playerTwoName.getText().trim().equals(""))
                {
                    m_players[1] = new Player("Player2");
                }
                else
                {
                    m_players[1] = new Player(playerTwoName.getText());
                }
                
                if(playerThreeName.getText().trim().equals(""))
                {
                    m_players[2] = new Player("Player3");
                }
                else
                {
                    m_players[2] = new Player(playerThreeName.getText());
                }
                
                if(playerFourName.getText().trim().equals(""))
                {
                    m_players[3] = new Player("Player4");
                }
                else
                {
                    m_players[3] = new Player(playerFourName.getText());
                }
                
                break;
        }
        
        //set all the m_players piece choices approperiately
        for(int i = 0; i < m_numPlayers; i++)
        {
            setPlayerOptions(m_players[i], i);
        }
        
    }

/*
NAME
        setPlayerOptions

SYNOPSIS
        setPlayerOptions(Player a_player, int a_playerNum)
    
            a_player --> The player to be initiated
            a_playerNum --> The number of the player being initiated

DESCRIPTION
        This method initializes all m_players of the game based on the options 
        they've chosen.

RETURNS
        void

AUTHOR
        William Ryan
*/    
    private void setPlayerOptions(Player a_player, int a_playerNum)
    {
        switch (a_playerNum)
        {
            //if the player being initialized is player one
            case 0:
                //set the m_players token based on there choice
                if(humanPlayerOne.isSelected())
                {
                    a_player.setPlayerType(true);
                }
                else
                {
                    a_player.setPlayerType(false);
                }
                
                if(checkHatOne.isSelected())
                {
                    a_player.setPlayerPiece(1);
                }
                else if(checkBOne.isSelected())
                {
                    a_player.setPlayerPiece(2);
                }
                else if(checkCarOne.isSelected())
                {
                    a_player.setPlayerPiece(3);
                }
                else if(checkBarOne.isSelected())
                {
                    a_player.setPlayerPiece(4);
                }
                else
                {
                    a_player.setPlayerPiece(5);
                }
                
                break;
            //if the player being initialized is player two
            case 1:
                
                if(humanPlayerTwo.isSelected())
                {
                    a_player.setPlayerType(true);
                }
                else
                {
                    a_player.setPlayerType(false);
                }
                
                if(checkHatTwo.isSelected())
                {
                    a_player.setPlayerPiece(1);
                }
                else if(checkBTwo.isSelected())
                {
                    a_player.setPlayerPiece(2);
                }
                else if(checkCarTwo.isSelected())
                {
                    a_player.setPlayerPiece(3);
                }
                else if(checkBarTwo.isSelected())
                {
                    a_player.setPlayerPiece(4);
                }
                else
                {
                    a_player.setPlayerPiece(5);
                }
                
                break;
            //if the player being initialized is player three
            case 2:
                
                if(humanPlayerThree.isSelected())
                {
                    a_player.setPlayerType(true);
                }
                else
                {
                    a_player.setPlayerType(false);
                }
                
                if(checkHatThree.isSelected())
                {
                    a_player.setPlayerPiece(1);
                }
                else if(checkBThree.isSelected())
                {
                    a_player.setPlayerPiece(2);
                }
                else if(checkCarThree.isSelected())
                {
                    a_player.setPlayerPiece(3);
                }
                else if(checkBarThree.isSelected())
                {
                    a_player.setPlayerPiece(4);
                }
                else
                {
                    a_player.setPlayerPiece(5);
                }
                
                break;
            //if the player being initialized is player four
            case 3:
                
                if(humanPlayerFour.isSelected())
                {
                    a_player.setPlayerType(true);
                }
                else
                {
                    a_player.setPlayerType(false);
                }
                
                if(checkHatFour.isSelected())
                {
                    a_player.setPlayerPiece(1);
                }
                else if(checkBFour.isSelected())
                {
                    a_player.setPlayerPiece(2);
                }
                else if(checkCarFour.isSelected())
                {
                    a_player.setPlayerPiece(3);
                }
                else if(checkBarFour.isSelected())
                {
                    a_player.setPlayerPiece(4);
                }
                else
                {
                    a_player.setPlayerPiece(5);
                }
                
                break;
        }
    }
    
    //ensures player one cannot be both a human and computer
    private void humanPlayerOneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_humanPlayerOneMousePressed
        // TODO add your handling code here:
       
        if(humanPlayerOne.isSelected())
        {
            humanPlayerOne.setSelected(false);
        }
    }//GEN-LAST:event_humanPlayerOneMousePressed

    //Start the game
    private void startBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startBtnMousePressed
        // TODO add your handling code here:
        //initialize the Game
        setGame();
        m_newGame.setPlayers(m_players, m_numPlayers);
        
        //dispose the MainMenu frame
        JFrame menuFrame = (JFrame)this.getParent().getParent().getParent().getParent()
                .getParent().getParent().getParent().getParent().getParent();
        menuFrame.dispose();
        
        //Display the main game frame
        MainGameFrame mainGame = new MainGameFrame(m_newGame);
        mainGame.setVisible(true);
    }//GEN-LAST:event_startBtnMousePressed

/**************************************************************************************/
/*The following listeners ensures no m_players can have the same token or be both a human and computer****/
/**************************************************************************************/
    
    private void humanPlayerTwoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_humanPlayerTwoMousePressed
        // TODO add your handling code here:
        if(humanPlayerTwo.isSelected())
        {
            humanPlayerTwo.setSelected(false);
        }
    }//GEN-LAST:event_humanPlayerTwoMousePressed

    private void humanPlayerThreeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_humanPlayerThreeMousePressed
        // TODO add your handling code here:
        if(humanPlayerThree.isSelected())
        {
            humanPlayerThree.setSelected(false);
        }
    }//GEN-LAST:event_humanPlayerThreeMousePressed

    private void humanPlayerFourMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_humanPlayerFourMousePressed
        // TODO add your handling code here:
        if(humanPlayerFour.isSelected())
        {
            humanPlayerFour.setSelected(false);
        }
    }//GEN-LAST:event_humanPlayerFourMousePressed

    private void checkHatOneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkHatOneMousePressed
        // TODO add your handling code here:
        if(checkHatOne.isSelected())
        {
            checkHatOne.setSelected(false);
        }
        if(checkHatTwo.isSelected() || checkHatThree.isSelected() || checkHatFour.isSelected())
        {
            checkHatOne.setSelected(true);
            return;
        }
        if(checkBOne.isSelected())
        {
            checkBOne.setSelected(false);
        }
        if(checkBarOne.isSelected())
        {
            checkBarOne.setSelected(false);
        }
        if(checkCarOne.isSelected())
        {
            checkCarOne.setSelected(false);
        }
        if(checkShoeOne.isSelected())
        {
            checkShoeOne.setSelected(false);
        }
    }//GEN-LAST:event_checkHatOneMousePressed

    private void checkBOneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkBOneMousePressed
        // TODO add your handling code here:
        if(checkBOne.isSelected())
        {
            checkBOne.setSelected(false);
        }
        if(checkBTwo.isSelected() || checkBThree.isSelected() || checkBFour.isSelected())
        {
            checkBOne.setSelected(true);
            return;
        }
        if(checkHatOne.isSelected())
        {
            checkHatOne.setSelected(false);
        }
        if(checkBarOne.isSelected())
        {
            checkBarOne.setSelected(false);
        }
        if(checkCarOne.isSelected())
        {
            checkCarOne.setSelected(false);
        }
        if(checkShoeOne.isSelected())
        {
            checkShoeOne.setSelected(false);
        }
    }//GEN-LAST:event_checkBOneMousePressed

    private void checkCarOneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkCarOneMousePressed
        // TODO add your handling code here:
        if(checkCarOne.isSelected())
        {
            checkCarOne.setSelected(false);
        }
        if(checkCarTwo.isSelected() || checkCarThree.isSelected() || checkCarFour.isSelected())
        {
            checkCarOne.setSelected(true);
            return;
        }
        if(checkHatOne.isSelected())
        {
            checkHatOne.setSelected(false);
        }
        if(checkBarOne.isSelected())
        {
            checkBarOne.setSelected(false);
        }
        if(checkBOne.isSelected())
        {
            checkBOne.setSelected(false);
        }
        if(checkShoeOne.isSelected())
        {
            checkShoeOne.setSelected(false);
        }
    }//GEN-LAST:event_checkCarOneMousePressed

    private void checkBarOneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkBarOneMousePressed
        // TODO add your handling code here:
        if(checkBarOne.isSelected())
        {
            checkBarOne.setSelected(false);
        }
        if(checkBarTwo.isSelected() || checkBarThree.isSelected() || checkBarFour.isSelected())
        {
            checkBarOne.setSelected(true);
            return;
        }
        if(checkHatOne.isSelected())
        {
            checkHatOne.setSelected(false);
        }
        if(checkCarOne.isSelected())
        {
            checkCarOne.setSelected(false);
        }
        if(checkBOne.isSelected())
        {
            checkBOne.setSelected(false);
        }
        if(checkShoeOne.isSelected())
        {
            checkShoeOne.setSelected(false);
        }
    }//GEN-LAST:event_checkBarOneMousePressed

    private void checkHatTwoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkHatTwoMousePressed
        // TODO add your handling code here:
        if(checkHatTwo.isSelected())
        {
            checkHatTwo.setSelected(false);
        }
        if(checkHatOne.isSelected() || checkHatThree.isSelected() || checkHatFour.isSelected())
        {
            checkHatTwo.setSelected(true);
            return;
        }
        if(checkBTwo.isSelected())
        {
            checkBTwo.setSelected(false);
        }
        if(checkBarTwo.isSelected())
        {
            checkBarTwo.setSelected(false);
        }
        if(checkCarTwo.isSelected())
        {
            checkCarTwo.setSelected(false);
        }
        if(checkShoeTwo.isSelected())
        {
            checkShoeTwo.setSelected(false);
        }
    }//GEN-LAST:event_checkHatTwoMousePressed

    private void checkBTwoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkBTwoMousePressed
        // TODO add your handling code here:
        if(checkBTwo.isSelected())
        {
            checkBTwo.setSelected(false);
        }
        if(checkBOne.isSelected() || checkBThree.isSelected() || checkBFour.isSelected())
        {
            checkBTwo.setSelected(true);
            return;
        }
        if(checkHatTwo.isSelected())
        {
            checkHatTwo.setSelected(false);
        }
        if(checkBarTwo.isSelected())
        {
            checkBarTwo.setSelected(false);
        }
        if(checkCarTwo.isSelected())
        {
            checkCarTwo.setSelected(false);
        }
        if(checkShoeTwo.isSelected())
        {
            checkShoeTwo.setSelected(false);
        }
    }//GEN-LAST:event_checkBTwoMousePressed

    private void checkCarTwoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkCarTwoMousePressed
        // TODO add your handling code here:
        if(checkCarTwo.isSelected())
        {
            checkCarTwo.setSelected(false);
        }
        if(checkCarOne.isSelected() || checkCarThree.isSelected() || checkCarFour.isSelected())
        {
            checkCarTwo.setSelected(true);
            return;
        }
        if(checkHatTwo.isSelected())
        {
            checkHatTwo.setSelected(false);
        }
        if(checkBarTwo.isSelected())
        {
            checkBarTwo.setSelected(false);
        }
        if(checkBTwo.isSelected())
        {
            checkBTwo.setSelected(false);
        }
        if(checkShoeTwo.isSelected())
        {
            checkShoeTwo.setSelected(false);
        }
    }//GEN-LAST:event_checkCarTwoMousePressed

    private void checkBarTwoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkBarTwoMousePressed
        // TODO add your handling code here:
        if(checkBarTwo.isSelected())
        {
            checkBarTwo.setSelected(false);
        }
         if(checkBarOne.isSelected() || checkBarThree.isSelected() || checkBarFour.isSelected())
        {
            checkBarTwo.setSelected(true);
            return;
        }
        if(checkHatTwo.isSelected())
        {
            checkHatTwo.setSelected(false);
        }
        if(checkCarTwo.isSelected())
        {
            checkCarTwo.setSelected(false);
        }
        if(checkBTwo.isSelected())
        {
            checkBTwo.setSelected(false);
        }
        if(checkShoeTwo.isSelected())
        {
            checkShoeTwo.setSelected(false);
        }
    }//GEN-LAST:event_checkBarTwoMousePressed

    private void checkHatThreeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkHatThreeMousePressed
        // TODO add your handling code here:
        if(checkHatThree.isSelected())
        {
            checkHatThree.setSelected(false);
        }
        if(checkHatOne.isSelected() || checkHatTwo.isSelected() || checkHatFour.isSelected())
        {
            checkHatThree.setSelected(true);
            return;
        }
        if(checkBThree.isSelected())
        {
            checkBThree.setSelected(false);
        }
        if(checkBarThree.isSelected())
        {
            checkBarThree.setSelected(false);
        }
        if(checkCarThree.isSelected())
        {
            checkCarThree.setSelected(false);
        }
        if(checkShoeThree.isSelected())
        {
            checkShoeThree.setSelected(false);
        }
    }//GEN-LAST:event_checkHatThreeMousePressed

    private void checkBThreeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkBThreeMousePressed
        // TODO add your handling code here:
        if(checkBThree.isSelected())
        {
            checkBThree.setSelected(false);
        }
        if(checkBOne.isSelected() || checkBTwo.isSelected() || checkBFour.isSelected())
        {
            checkBThree.setSelected(true);
            return;
        }
        if(checkHatThree.isSelected())
        {
            checkHatThree.setSelected(false);
        }
        if(checkBarThree.isSelected())
        {
            checkBarThree.setSelected(false);
        }
        if(checkCarThree.isSelected())
        {
            checkCarThree.setSelected(false);
        }
        if(checkShoeThree.isSelected())
        {
            checkShoeThree.setSelected(false);
        }
    }//GEN-LAST:event_checkBThreeMousePressed

    private void checkCarThreeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkCarThreeMousePressed
        // TODO add your handling code here:
        if(checkCarThree.isSelected())
        {
            checkCarThree.setSelected(false);
        }
        if(checkCarOne.isSelected() || checkCarTwo.isSelected() || checkCarFour.isSelected())
        {
            checkCarThree.setSelected(true);
            return;
        }
        if(checkHatThree.isSelected())
        {
            checkHatThree.setSelected(false);
        }
        if(checkBarThree.isSelected())
        {
            checkBarThree.setSelected(false);
        }
        if(checkBThree.isSelected())
        {
            checkBThree.setSelected(false);
        }
        if(checkShoeThree.isSelected())
        {
            checkShoeThree.setSelected(false);
        }
    }//GEN-LAST:event_checkCarThreeMousePressed

    private void checkBarThreeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkBarThreeMousePressed
        // TODO add your handling code here:
        if(checkBarThree.isSelected())
        {
            checkBarThree.setSelected(false);
        }
        if(checkBarOne.isSelected() || checkBarTwo.isSelected() || checkBarFour.isSelected())
        {
            checkBarThree.setSelected(true);
            return;
        }
        if(checkHatThree.isSelected())
        {
            checkHatThree.setSelected(false);
        }
        if(checkCarThree.isSelected())
        {
            checkCarThree.setSelected(false);
        }
        if(checkBThree.isSelected())
        {
            checkBThree.setSelected(false);
        }
        if(checkShoeThree.isSelected())
        {
            checkShoeThree.setSelected(false);
        }
    }//GEN-LAST:event_checkBarThreeMousePressed

    private void checkHatFourMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkHatFourMousePressed
        // TODO add your handling code here:
        if(checkHatFour.isSelected())
        {
            checkHatFour.setSelected(false);
        }
        if(checkHatOne.isSelected() || checkHatTwo.isSelected() || checkHatThree.isSelected())
        {
            checkHatFour.setSelected(true);
            return;
        }
        if(checkBFour.isSelected())
        {
            checkBFour.setSelected(false);
        }
        if(checkBarFour.isSelected())
        {
            checkBarFour.setSelected(false);
        }
        if(checkCarFour.isSelected())
        {
            checkCarFour.setSelected(false);
        }
        if(checkShoeFour.isSelected())
        {
            checkShoeFour.setSelected(false);
        }
    }//GEN-LAST:event_checkHatFourMousePressed

    private void checkBFourMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkBFourMousePressed
        // TODO add your handling code here:
        if(checkBFour.isSelected())
        {
            checkBFour.setSelected(false);
        }
        if(checkBOne.isSelected() || checkBTwo.isSelected() || checkBThree.isSelected())
        {
            checkBFour.setSelected(true);
            return;
        }
        if(checkHatFour.isSelected())
        {
            checkHatFour.setSelected(false);
        }
        if(checkBarFour.isSelected())
        {
            checkBarFour.setSelected(false);
        }
        if(checkCarFour.isSelected())
        {
            checkCarFour.setSelected(false);
        }
        if(checkShoeFour.isSelected())
        {
            checkShoeFour.setSelected(false);
        }
    }//GEN-LAST:event_checkBFourMousePressed

    private void checkCarFourMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkCarFourMousePressed
        // TODO add your handling code here:
        if(checkCarFour.isSelected())
        {
            checkCarFour.setSelected(false);
        }
        if(checkCarOne.isSelected() || checkCarTwo.isSelected() || checkCarThree.isSelected())
        {
            checkCarFour.setSelected(true);
            return;
        }
        if(checkHatFour.isSelected())
        {
            checkHatFour.setSelected(false);
        }
        if(checkBarFour.isSelected())
        {
            checkBarFour.setSelected(false);
        }
        if(checkBFour.isSelected())
        {
            checkBFour.setSelected(false);
        }
        if(checkShoeFour.isSelected())
        {
            checkShoeFour.setSelected(false);
        }
    }//GEN-LAST:event_checkCarFourMousePressed

    private void checkBarFourMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkBarFourMousePressed
        // TODO add your handling code here:
        if(checkBarFour.isSelected())
        {
            checkBarFour.setSelected(false);
        }
        if(checkBarOne.isSelected() || checkBarTwo.isSelected() || checkBarThree.isSelected())
        {
            checkBarFour.setSelected(true);
            return;
        }
        if(checkHatFour.isSelected())
        {
            checkHatFour.setSelected(false);
        }
        if(checkCarFour.isSelected())
        {
            checkCarFour.setSelected(false);
        }
        if(checkBFour.isSelected())
        {
            checkBFour.setSelected(false);
        }
        if(checkShoeFour.isSelected())
        {
            checkShoeFour.setSelected(false);
        }
    }//GEN-LAST:event_checkBarFourMousePressed

    private void checkShoeOneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkShoeOneMousePressed
        // TODO add your handling code here:
        if(checkShoeOne.isSelected())
        {
            checkShoeOne.setSelected(false);
        }
        if(checkShoeTwo.isSelected() || checkShoeThree.isSelected() || checkShoeFour.isSelected())
        {
            checkShoeOne.setSelected(true);
            return;
        }
        if(checkBOne.isSelected())
        {
            checkBOne.setSelected(false);
        }
        if(checkBarOne.isSelected())
        {
            checkBarOne.setSelected(false);
        }
        if(checkCarOne.isSelected())
        {
            checkCarOne.setSelected(false);
        }
        if(checkHatOne.isSelected())
        {
            checkHatOne.setSelected(false);
        }
    }//GEN-LAST:event_checkShoeOneMousePressed

    private void checkShoeTwoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkShoeTwoMousePressed
        // TODO add your handling code here:
        if(checkShoeTwo.isSelected())
        {
            checkShoeTwo.setSelected(false);
        }
        if(checkShoeOne.isSelected() || checkShoeThree.isSelected() || checkShoeFour.isSelected())
        {
            checkShoeTwo.setSelected(true);
            return;
        }
        if(checkBTwo.isSelected())
        {
            checkBTwo.setSelected(false);
        }
        if(checkBarTwo.isSelected())
        {
            checkBarTwo.setSelected(false);
        }
        if(checkCarTwo.isSelected())
        {
            checkCarTwo.setSelected(false);
        }
        if(checkHatTwo.isSelected())
        {
            checkHatTwo.setSelected(false);
        }
    }//GEN-LAST:event_checkShoeTwoMousePressed

    private void checkShoeThreeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkShoeThreeMousePressed
        // TODO add your handling code here:
        if(checkShoeThree.isSelected())
        {
            checkShoeThree.setSelected(false);
        }
        if(checkShoeOne.isSelected() || checkShoeTwo.isSelected() || checkShoeFour.isSelected())
        {
            checkShoeThree.setSelected(true);
            return;
        }
        if(checkBThree.isSelected())
        {
            checkBThree.setSelected(false);
        }
        if(checkBarThree.isSelected())
        {
            checkBarThree.setSelected(false);
        }
        if(checkCarThree.isSelected())
        {
            checkCarThree.setSelected(false);
        }
        if(checkHatThree.isSelected())
        {
            checkHatThree.setSelected(false);
        }
    }//GEN-LAST:event_checkShoeThreeMousePressed

    private void checkShoeFourMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkShoeFourMousePressed
        // TODO add your handling code here:
        if(checkShoeFour.isSelected())
        {
            checkShoeFour.setSelected(false);
        }
        if(checkShoeOne.isSelected() || checkShoeTwo.isSelected() || checkShoeThree.isSelected())
        {
            checkShoeFour.setSelected(true);
            return;
        }
        if(checkBFour.isSelected())
        {
            checkBFour.setSelected(false);
        }
        if(checkBarFour.isSelected())
        {
            checkBarFour.setSelected(false);
        }
        if(checkCarFour.isSelected())
        {
            checkCarFour.setSelected(false);
        }
        if(checkHatFour.isSelected())
        {
            checkHatFour.setSelected(false);
        }
    }//GEN-LAST:event_checkShoeFourMousePressed

    private void addPlayerBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPlayerBtnMousePressed
        // TODO add your handling code here:
        if(m_numPlayers == 2)
        {
            playerThreePanel.setVisible(true);
            
            if(!checkHatOne.isSelected() && !checkHatTwo.isSelected())
            {
                checkHatThree.setSelected(true);
            }
            else if(!checkBOne.isSelected() && !checkBTwo.isSelected())
            {
                checkBThree.setSelected(true);
            }
            else if(!checkCarOne.isSelected() && !checkCarTwo.isSelected())
            {
                checkCarThree.setSelected(true);
            }
            else if(!checkBarOne.isSelected() && !checkBarTwo.isSelected())
            {
                checkBarThree.setSelected(true);
            }
            else if(!checkShoeOne.isSelected() && !checkShoeTwo.isSelected())
            {
                checkShoeThree.setSelected(true);
            }
            m_numPlayers++;
        }
        else if(m_numPlayers == 3)
        {
            playerFourPanel.setVisible(true);
            
            if(!checkHatOne.isSelected() && !checkHatTwo.isSelected() && !checkHatThree.isSelected())
            {
                checkHatFour.setSelected(true);
            }
            else if(!checkBOne.isSelected() && !checkBTwo.isSelected() && !checkBThree.isSelected())
            {
                checkBFour.setSelected(true);
            }
            else if(!checkCarOne.isSelected() && !checkCarTwo.isSelected() && !checkCarThree.isSelected())
            {
                checkCarFour.setSelected(true);
            }
            else if(!checkBarOne.isSelected() && !checkBarTwo.isSelected() && !checkBarThree.isSelected())
            {
                checkBarFour.setSelected(true);
            }
            else if(!checkShoeOne.isSelected() && !checkShoeTwo.isSelected() && !checkShoeThree.isSelected())
            {
                checkShoeFour.setSelected(true);
            }
            m_numPlayers++;
        }
        else
        {
            return;
        }
    }//GEN-LAST:event_addPlayerBtnMousePressed

    private void deletePlayerBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletePlayerBtnMousePressed
        // TODO add your handling code here:
        if(m_numPlayers == 3)
        {
            playerThreePanel.setVisible(false);
            
            if(checkHatThree.isSelected())
            {
                checkHatThree.setSelected(false);
            }
            if(checkBThree.isSelected())
            {
                checkBThree.setSelected(false);
            }
            if(checkCarThree.isSelected())
            {
                checkCarThree.setSelected(false);
            }
            if(checkBarThree.isSelected())
            {
                checkBarThree.setSelected(false);
            }
            if(checkShoeThree.isSelected())
            {
                checkShoeThree.setSelected(false);
            }
            m_numPlayers--;
        }
        else if(m_numPlayers == 4)
        {
            playerFourPanel.setVisible(false);
            
            if(checkHatFour.isSelected())
            {
                checkHatFour.setSelected(false);
            }
            if(checkBFour.isSelected())
            {
                checkBFour.setSelected(false);
            }
            if(checkCarFour.isSelected())
            {
                checkCarFour.setSelected(false);
            }
            if(checkBarFour.isSelected())
            {
                checkBarFour.setSelected(false);
            }
            if(checkShoeFour.isSelected())
            {
                checkShoeFour.setSelected(false);
            }
            m_numPlayers--;
        }
        else
        {
            return;
        }
        
        
    }//GEN-LAST:event_deletePlayerBtnMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPlayerBtn;
    private javax.swing.JLabel barrelFour;
    private javax.swing.JLabel barrelOne;
    private javax.swing.JLabel barrelThree;
    private javax.swing.JLabel barrelTwo;
    private javax.swing.JLabel battleshipFour;
    private javax.swing.JLabel battleshipOne;
    private javax.swing.JLabel battleshipThree;
    private javax.swing.JLabel battleshipTwo;
    private javax.swing.JCheckBox checkBFour;
    private javax.swing.JCheckBox checkBOne;
    private javax.swing.JCheckBox checkBThree;
    private javax.swing.JCheckBox checkBTwo;
    private javax.swing.JCheckBox checkBarFour;
    private javax.swing.JCheckBox checkBarOne;
    private javax.swing.JCheckBox checkBarThree;
    private javax.swing.JCheckBox checkBarTwo;
    private javax.swing.JCheckBox checkCarFour;
    private javax.swing.JCheckBox checkCarOne;
    private javax.swing.JCheckBox checkCarThree;
    private javax.swing.JCheckBox checkCarTwo;
    private javax.swing.JCheckBox checkHatFour;
    private javax.swing.JCheckBox checkHatOne;
    private javax.swing.JCheckBox checkHatThree;
    private javax.swing.JCheckBox checkHatTwo;
    private javax.swing.JCheckBox checkShoeFour;
    private javax.swing.JCheckBox checkShoeOne;
    private javax.swing.JCheckBox checkShoeThree;
    private javax.swing.JCheckBox checkShoeTwo;
    private javax.swing.JButton deletePlayerBtn;
    private javax.swing.JLabel hatFour;
    private javax.swing.JLabel hatOne;
    private javax.swing.JLabel hatThree;
    private javax.swing.JLabel hatTwo;
    private javax.swing.JRadioButton humanPlayerFour;
    private javax.swing.JRadioButton humanPlayerOne;
    private javax.swing.JRadioButton humanPlayerThree;
    private javax.swing.JRadioButton humanPlayerTwo;
    private javax.swing.JLabel optionsTitle;
    private javax.swing.JLabel playerFourLabel;
    private javax.swing.JTextField playerFourName;
    private javax.swing.JPanel playerFourPanel;
    private javax.swing.JLabel playerOneLabel;
    private javax.swing.JTextField playerOneName;
    private javax.swing.JPanel playerOnePanel;
    private javax.swing.JLabel playerThreeLabel;
    private javax.swing.JTextField playerThreeName;
    private javax.swing.JPanel playerThreePanel;
    private javax.swing.JLabel playerTwoLabel;
    private javax.swing.JTextField playerTwoName;
    private javax.swing.JPanel playerTwoPanel;
    private javax.swing.JLabel racecarFour;
    private javax.swing.JLabel racecarOne;
    private javax.swing.JLabel racecarThree;
    private javax.swing.JLabel racecarTwo;
    private javax.swing.JLabel shoeFour;
    private javax.swing.JLabel shoeOne;
    private javax.swing.JLabel shoeThree;
    private javax.swing.JLabel shoeTwo;
    private javax.swing.JButton startBtn;
    // End of variables declaration//GEN-END:variables
    
    //array of m_players that will be playing
    private Player[] m_players;
    //game object to initialize 
    private Game m_newGame;
    //number of m_players participation
    private int m_numPlayers;
}
